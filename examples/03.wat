(module
  (import "std" "assert(bool)" (func $"assert(bool)" (param i32)))
  (import "std" ".allocator-start" (global $".allocator-start" (mut i32)))
  (data (i32.const 0) "x == 4") ;; Needed to give debug info when the assertion would fail
  (global $x (mut i32) (i32.const 0))
  (func (export ".main()")
    (global.set $".allocator-start" (i32.const 6))
    (global.set $x (i32.const 3))
    (global.get $x)
    (call $add_one)
    (global.set $x)
    (global.get $x)
    (i32.const 4)
    (i32.eq)
    (call $"assert(bool)")
  )
  (func $add_one (param $x i32) (result i32)
    (local.get $x)
    (i32.const 1)
    (i32.add)
    (local.set $x)
    (local.get $x)
  )
)
